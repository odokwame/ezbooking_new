/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as HomeImport } from './routes/home'
import { Route as FacilityImport } from './routes/facility'
import { Route as FacilitiesImport } from './routes/facilities'
import { Route as ExampleImport } from './routes/example'
import { Route as BookingImport } from './routes/booking'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardReportsImport } from './routes/dashboard/reports'
import { Route as DashboardProfileImport } from './routes/dashboard/profile'
import { Route as DashboardFacilitiesImport } from './routes/dashboard/facilities'
import { Route as DashboardDashboardImport } from './routes/dashboard/dashboard'
import { Route as DashboardBookingsImport } from './routes/dashboard/bookings'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const FacilityRoute = FacilityImport.update({
  id: '/facility',
  path: '/facility',
  getParentRoute: () => rootRoute,
} as any)

const FacilitiesRoute = FacilitiesImport.update({
  id: '/facilities',
  path: '/facilities',
  getParentRoute: () => rootRoute,
} as any)

const ExampleRoute = ExampleImport.update({
  id: '/example',
  path: '/example',
  getParentRoute: () => rootRoute,
} as any)

const BookingRoute = BookingImport.update({
  id: '/booking',
  path: '/booking',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardReportsRoute = DashboardReportsImport.update({
  id: '/dashboard/reports',
  path: '/dashboard/reports',
  getParentRoute: () => rootRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  id: '/dashboard/profile',
  path: '/dashboard/profile',
  getParentRoute: () => rootRoute,
} as any)

const DashboardFacilitiesRoute = DashboardFacilitiesImport.update({
  id: '/dashboard/facilities',
  path: '/dashboard/facilities',
  getParentRoute: () => rootRoute,
} as any)

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/dashboard/dashboard',
  path: '/dashboard/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardBookingsRoute = DashboardBookingsImport.update({
  id: '/dashboard/bookings',
  path: '/dashboard/bookings',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/booking': {
      id: '/booking'
      path: '/booking'
      fullPath: '/booking'
      preLoaderRoute: typeof BookingImport
      parentRoute: typeof rootRoute
    }
    '/example': {
      id: '/example'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleImport
      parentRoute: typeof rootRoute
    }
    '/facilities': {
      id: '/facilities'
      path: '/facilities'
      fullPath: '/facilities'
      preLoaderRoute: typeof FacilitiesImport
      parentRoute: typeof rootRoute
    }
    '/facility': {
      id: '/facility'
      path: '/facility'
      fullPath: '/facility'
      preLoaderRoute: typeof FacilityImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/bookings': {
      id: '/dashboard/bookings'
      path: '/dashboard/bookings'
      fullPath: '/dashboard/bookings'
      preLoaderRoute: typeof DashboardBookingsImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/dashboard': {
      id: '/dashboard/dashboard'
      path: '/dashboard/dashboard'
      fullPath: '/dashboard/dashboard'
      preLoaderRoute: typeof DashboardDashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/facilities': {
      id: '/dashboard/facilities'
      path: '/dashboard/facilities'
      fullPath: '/dashboard/facilities'
      preLoaderRoute: typeof DashboardFacilitiesImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/dashboard/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/reports': {
      id: '/dashboard/reports'
      path: '/dashboard/reports'
      fullPath: '/dashboard/reports'
      preLoaderRoute: typeof DashboardReportsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/example': typeof ExampleRoute
  '/facilities': typeof FacilitiesRoute
  '/facility': typeof FacilityRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard/bookings': typeof DashboardBookingsRoute
  '/dashboard/dashboard': typeof DashboardDashboardRoute
  '/dashboard/facilities': typeof DashboardFacilitiesRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/reports': typeof DashboardReportsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/example': typeof ExampleRoute
  '/facilities': typeof FacilitiesRoute
  '/facility': typeof FacilityRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard/bookings': typeof DashboardBookingsRoute
  '/dashboard/dashboard': typeof DashboardDashboardRoute
  '/dashboard/facilities': typeof DashboardFacilitiesRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/reports': typeof DashboardReportsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/example': typeof ExampleRoute
  '/facilities': typeof FacilitiesRoute
  '/facility': typeof FacilityRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard/bookings': typeof DashboardBookingsRoute
  '/dashboard/dashboard': typeof DashboardDashboardRoute
  '/dashboard/facilities': typeof DashboardFacilitiesRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/reports': typeof DashboardReportsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/booking'
    | '/example'
    | '/facilities'
    | '/facility'
    | '/home'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard/bookings'
    | '/dashboard/dashboard'
    | '/dashboard/facilities'
    | '/dashboard/profile'
    | '/dashboard/reports'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/booking'
    | '/example'
    | '/facilities'
    | '/facility'
    | '/home'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard/bookings'
    | '/dashboard/dashboard'
    | '/dashboard/facilities'
    | '/dashboard/profile'
    | '/dashboard/reports'
  id:
    | '__root__'
    | '/'
    | '/booking'
    | '/example'
    | '/facilities'
    | '/facility'
    | '/home'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard/bookings'
    | '/dashboard/dashboard'
    | '/dashboard/facilities'
    | '/dashboard/profile'
    | '/dashboard/reports'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookingRoute: typeof BookingRoute
  ExampleRoute: typeof ExampleRoute
  FacilitiesRoute: typeof FacilitiesRoute
  FacilityRoute: typeof FacilityRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  RegisterRoute: typeof RegisterRoute
  DashboardBookingsRoute: typeof DashboardBookingsRoute
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardFacilitiesRoute: typeof DashboardFacilitiesRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardReportsRoute: typeof DashboardReportsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookingRoute: BookingRoute,
  ExampleRoute: ExampleRoute,
  FacilitiesRoute: FacilitiesRoute,
  FacilityRoute: FacilityRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  RegisterRoute: RegisterRoute,
  DashboardBookingsRoute: DashboardBookingsRoute,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardFacilitiesRoute: DashboardFacilitiesRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardReportsRoute: DashboardReportsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/booking",
        "/example",
        "/facilities",
        "/facility",
        "/home",
        "/login",
        "/logout",
        "/register",
        "/dashboard/bookings",
        "/dashboard/dashboard",
        "/dashboard/facilities",
        "/dashboard/profile",
        "/dashboard/reports"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/booking": {
      "filePath": "booking.jsx"
    },
    "/example": {
      "filePath": "example.jsx"
    },
    "/facilities": {
      "filePath": "facilities.jsx"
    },
    "/facility": {
      "filePath": "facility.jsx"
    },
    "/home": {
      "filePath": "home.jsx"
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/logout": {
      "filePath": "logout.jsx"
    },
    "/register": {
      "filePath": "register.jsx"
    },
    "/dashboard/bookings": {
      "filePath": "dashboard/bookings.jsx"
    },
    "/dashboard/dashboard": {
      "filePath": "dashboard/dashboard.jsx"
    },
    "/dashboard/facilities": {
      "filePath": "dashboard/facilities.jsx"
    },
    "/dashboard/profile": {
      "filePath": "dashboard/profile.jsx"
    },
    "/dashboard/reports": {
      "filePath": "dashboard/reports.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
