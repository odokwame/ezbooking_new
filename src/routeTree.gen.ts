/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as HomeImport } from './routes/home'
import { Route as FacilitiesImport } from './routes/facilities'
import { Route as ExampleImport } from './routes/example'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as BookingImport } from './routes/booking'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardProfileImport } from './routes/dashboard/profile'
import { Route as DashboardMyBookingsImport } from './routes/dashboard/my-bookings'
import { Route as DashboardFacilitiesImport } from './routes/dashboard/facilities'
import { Route as DashboardAuthContextImport } from './routes/dashboard/AuthContext'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const FacilitiesRoute = FacilitiesImport.update({
  id: '/facilities',
  path: '/facilities',
  getParentRoute: () => rootRoute,
} as any)

const ExampleRoute = ExampleImport.update({
  id: '/example',
  path: '/example',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const BookingRoute = BookingImport.update({
  id: '/booking',
  path: '/booking',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMyBookingsRoute = DashboardMyBookingsImport.update({
  id: '/my-bookings',
  path: '/my-bookings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardFacilitiesRoute = DashboardFacilitiesImport.update({
  id: '/facilities',
  path: '/facilities',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAuthContextRoute = DashboardAuthContextImport.update({
  id: '/AuthContext',
  path: '/AuthContext',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/booking': {
      id: '/booking'
      path: '/booking'
      fullPath: '/booking'
      preLoaderRoute: typeof BookingImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/example': {
      id: '/example'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleImport
      parentRoute: typeof rootRoute
    }
    '/facilities': {
      id: '/facilities'
      path: '/facilities'
      fullPath: '/facilities'
      preLoaderRoute: typeof FacilitiesImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/AuthContext': {
      id: '/dashboard/AuthContext'
      path: '/AuthContext'
      fullPath: '/dashboard/AuthContext'
      preLoaderRoute: typeof DashboardAuthContextImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/facilities': {
      id: '/dashboard/facilities'
      path: '/facilities'
      fullPath: '/dashboard/facilities'
      preLoaderRoute: typeof DashboardFacilitiesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/my-bookings': {
      id: '/dashboard/my-bookings'
      path: '/my-bookings'
      fullPath: '/dashboard/my-bookings'
      preLoaderRoute: typeof DashboardMyBookingsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardAuthContextRoute: typeof DashboardAuthContextRoute
  DashboardFacilitiesRoute: typeof DashboardFacilitiesRoute
  DashboardMyBookingsRoute: typeof DashboardMyBookingsRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAuthContextRoute: DashboardAuthContextRoute,
  DashboardFacilitiesRoute: DashboardFacilitiesRoute,
  DashboardMyBookingsRoute: DashboardMyBookingsRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/example': typeof ExampleRoute
  '/facilities': typeof FacilitiesRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard/AuthContext': typeof DashboardAuthContextRoute
  '/dashboard/facilities': typeof DashboardFacilitiesRoute
  '/dashboard/my-bookings': typeof DashboardMyBookingsRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/example': typeof ExampleRoute
  '/facilities': typeof FacilitiesRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard/AuthContext': typeof DashboardAuthContextRoute
  '/dashboard/facilities': typeof DashboardFacilitiesRoute
  '/dashboard/my-bookings': typeof DashboardMyBookingsRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/example': typeof ExampleRoute
  '/facilities': typeof FacilitiesRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard/AuthContext': typeof DashboardAuthContextRoute
  '/dashboard/facilities': typeof DashboardFacilitiesRoute
  '/dashboard/my-bookings': typeof DashboardMyBookingsRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/booking'
    | '/dashboard'
    | '/example'
    | '/facilities'
    | '/home'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard/AuthContext'
    | '/dashboard/facilities'
    | '/dashboard/my-bookings'
    | '/dashboard/profile'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/booking'
    | '/example'
    | '/facilities'
    | '/home'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard/AuthContext'
    | '/dashboard/facilities'
    | '/dashboard/my-bookings'
    | '/dashboard/profile'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/booking'
    | '/dashboard'
    | '/example'
    | '/facilities'
    | '/home'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard/AuthContext'
    | '/dashboard/facilities'
    | '/dashboard/my-bookings'
    | '/dashboard/profile'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookingRoute: typeof BookingRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  ExampleRoute: typeof ExampleRoute
  FacilitiesRoute: typeof FacilitiesRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookingRoute: BookingRoute,
  DashboardRoute: DashboardRouteWithChildren,
  ExampleRoute: ExampleRoute,
  FacilitiesRoute: FacilitiesRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/booking",
        "/dashboard",
        "/example",
        "/facilities",
        "/home",
        "/login",
        "/logout",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/booking": {
      "filePath": "booking.jsx"
    },
    "/dashboard": {
      "filePath": "dashboard.jsx",
      "children": [
        "/dashboard/AuthContext",
        "/dashboard/facilities",
        "/dashboard/my-bookings",
        "/dashboard/profile",
        "/dashboard/"
      ]
    },
    "/example": {
      "filePath": "example.jsx"
    },
    "/facilities": {
      "filePath": "facilities.jsx"
    },
    "/home": {
      "filePath": "home.jsx"
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/logout": {
      "filePath": "logout.jsx"
    },
    "/register": {
      "filePath": "register.jsx"
    },
    "/dashboard/AuthContext": {
      "filePath": "dashboard/AuthContext.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/facilities": {
      "filePath": "dashboard/facilities.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/my-bookings": {
      "filePath": "dashboard/my-bookings.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/profile": {
      "filePath": "dashboard/profile.jsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.jsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
